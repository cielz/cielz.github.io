{
    "creemOpenness": {
        "@version": "0.0.1",
        "@lang": "en-US",
        "items": [
            {
                "type": "FunctionBlock",
                "name": "Atlas.TorqueWrenchSkill.ScrewFastening",
                "definitionBase64": "",
                "codeBase64": ""
            },
            {
                "type": "Device",
                "name": "TorqueWrench.Atlas.PF4000",
                "definitionBase64": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLQpDb21tb24gUnVudGltZS1FbmdpbmVlcmluZyBFeGNoYW5nZSBNb2RlbCAoQ1JFRU0pCkNvcHlyaWdodCDCqSAyMDIxIFNpZW1lbnMgQUcuIEFkdmFudGEuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgogKiBTaWVtZW5zIEFHLiBNSVQgTGljZW5zZSAxLjAKICoKICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24KICogb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24KICogZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dAogKiByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwKICogY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwKICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlCiAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nCiAqIGNvbmRpdGlvbnM6CiAqIAogKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZQogKiBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsCiAqIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUwogKiBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORAogKiBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVAogKiBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwKICogV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HCiAqIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IKICogT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgotLT4KPGNtOkNJTUkgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgCiAgICAgICAgIHhtbG5zOmJzPSJodHRwOi8vY3JlZW0uc2llbWVucy5jb20vc2NoZW1hcy9iYXNlIiAKICAgICAgICAgeG1sbnM6Y2ltPSJodHRwOi8vY3JlZW0uc2llbWVucy5jb20vc2NoZW1hcy9jaW0iIAogICAgICAgICB4bWxuczpjbT0iaHR0cDovL2NyZWVtLnNpZW1lbnMuY29tL3NjaGVtYXMvY3JlZW0iCiAgICAgICAgIHhtbG5zPSJodHRwOi8vY3JlZW0uc2llbWVucy5jb20vc2NoZW1hcy9jcmVlbSIKICAgICAgICAgc3RhdGU9IkFscGhhIiB2ZXJzaW9uPSIwLjAuMSIgbGFuZz0iZW4tVVMiPgoKICAgIDxjbTpEZXZpY2VEZXNjcmlwdGlvbiBpZD0iVG9ycXVlV3JlbmNoLkF0bGFzLlBGNDAwMCI+CiAgICAgICAgPGNtOk1ldGFkYXRhPgogICAgICAgICAgICA8Y206TmFtZXNwYWNlPkNSRUVNLkRELntpZH08L2NtOk5hbWVzcGFjZT4KICAgICAgICAgICAgPGNtOk5hbWU+QXRsYXMuUEY0MDAwPC9jbTpOYW1lPgogICAgICAgICAgICA8Y206VmVyc2lvbj4xLjAuMDwvY206VmVyc2lvbj4KICAgICAgICAgICAgPGNtOkRlc2NyaXB0aW9uLz4KICAgICAgICAgICAgPGNtOlVVSUQvPgogICAgICAgICAgICA8Y206T3JnYW5pemF0aW9uLz4KICAgICAgICAgICAgPGNtOkNlcnRpZmljYXRpb24vPgogICAgICAgIDwvY206TWV0YWRhdGE+CgogICAgICAgIDxjbTpVSUluZm9ybWF0aW9uPgogICAgICAgICAgICA8Y206Q29udGVudCBsYW5nPSJlbi1VUyI+CiAgICAgICAgICAgICAgICA8Y206RGlzcGxheU5hbWU+UEY0MDAwPC9jbTpEaXNwbGF5TmFtZT4KICAgICAgICAgICAgICAgIDxjbTpEZXNjcmlwdGlvbj5BdGxhcyB0b3JxdWUgd3JlbmNoPC9jbTpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDxjbTpEZXZpY2VUeXBlIGlkPSJUb3JxdWVXcmVuY2giIGRpc3BsYXlOYW1lPSJUb3JxdWUgV3JlbmNoIi8+CiAgICAgICAgICAgICAgICA8Y206SWNvbiByZWY9IlJlc291cmNlLmRlZmF1bHRJY29uIi8+CiAgICAgICAgICAgIDwvY206Q29udGVudD4KICAgICAgICAgICAgPGNtOkNvbnRlbnQgbGFuZz0iemgtQ04iPgogICAgICAgICAgICAgICAgPGNtOkRpc3BsYXlOYW1lPlBGNDAwMDwvY206RGlzcGxheU5hbWU+CiAgICAgICAgICAgICAgICA8Y206RGVzY3JpcHRpb24+6Zi/54m55ouJ5pav5omt55+p5omz5omL5Y+K5o6n5Yi25ZmoPC9jbTpEZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDxjbTpEZXZpY2VUeXBlIGlkPSJUb3JxdWVXcmVuY2giIGRpc3BsYXlOYW1lPSLmia3nn6nmibPmiYsiLz4KICAgICAgICAgICAgPC9jbTpDb250ZW50PgogICAgICAgIDwvY206VUlJbmZvcm1hdGlvbj4KCiAgICAgICAgPGNtOkRhdGE+CiAgICAgICAgICAgIDxjbTpDb250ZW50PgogICAgICAgICAgICAgICAgPGNtOkRldmljZVR5cGUgaWQ9IlRvcnF1ZVdyZW5jaCIvPgogICAgICAgICAgICAgICAgPGNtOlBhcmVudD4KICAgICAgICAgICAgICAgICAgICA8Y206Q29tbXVuaWNhdGlvbiByZWY9IkV0aGVybmV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGNtOlBhcmFtZXRlcnM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJpcEFkZHJlc3MiIGRlZmF1bHRWYWx1ZT0iMTkyLjE2OC4xLjk4Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFBvcnQgbnVtYmVyIHNoYWxsIGJlIGluIHJhbmdlIDEwMjV+NjU1MzUsIFJGQyAzMjMyIDw9IDEwMjQgaXMgbm90IGFsbG93ZWQgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y206UGFyYW1ldGVyIGlkPSJwb3J0TnVtYmVyIiBkZWZhdWx0VmFsdWU9IjQ1NDUiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9jbTpQYXJhbWV0ZXJzPgogICAgICAgICAgICAgICAgICAgIDwvY206Q29tbXVuaWNhdGlvbj4KICAgICAgICAgICAgICAgIDwvY206UGFyZW50PgogICAgICAgICAgICAgICAgPGNtOkNoaWxkcmVuLz4KICAgICAgICAgICAgPC9jbTpDb250ZW50PgogICAgICAgIDwvY206RGF0YT4KCiAgICAgICAgPGNtOlJlc291cmNlPgogICAgICAgICAgICA8Y206Q29udGVudCBpZD0iZGVmYXVsdEljb24iIHR5cGU9Ikljb24iIGZvcm1hdD0iU1ZHIj48L2NtOkNvbnRlbnQ+CiAgICAgICAgPC9jbTpSZXNvdXJjZT4KICAgIDwvY206RGV2aWNlRGVzY3JpcHRpb24+CjwvY206Q0lNST4="
            }
        ]
    }
}